---
version: 0.2

branches:
  feature/*, improvement/*, bugfix/*, w/*, q/*, hotfix/*:
    stage: "pre-merge"
  development/*:
    stage: "post-merge"


models:
  - SetProperty: &docker_image_name
      name: Set docker image name property
      property: docker_image_name
      value:
        "%(secret:private_registry_url)s/zenko/backbeat:\
        %(prop:commit_short_revision)s"
  - ShellCommand: &docker_build
      name: Build docker image
      command: >-
        docker build -t %(prop:docker_image_name)s .

stages:
  pre-merge:
    worker: &pod
      type: kube_pod
      path: eve/workers/pod.yml
    steps:
    - TriggerStages:
        name: trigger all the tests
        stage_names:
        - run-tests
        - docker-build
  run-tests:
    worker: &workspace
      type: docker
      path: eve/workers/unit_and_feature_tests
      volumes:
        - '/home/eve/workspace'
    steps:
      - Git: &git
          name: fetch source
          repourl: '%(prop:git_reference)s'
          shallow: True
          retryFetch: True
          haltOnFailure: True
      - ShellCommand:
          name: Npm install
          command: npm install --unsafe-perm
      - ShellCommand:
          name: run static analysis tools on markdown
          command: npm run --silent lint_md
      - ShellCommand:
          name: run static analysis tools on code
          command: npm run --silent lint
      - ShellCommand:
          name: run unit tests
          command: npm test
      - ShellCommand:
          name: run s3 server and run feature tests
          command: bash ./eve/workers/unit_and_feature_tests/run_server_tests.bash
          workdir: '%(prop:builddir)s/build'
          env:
            CI: "true"

  docker-build:
    worker:
      type: kube_pod
      path: eve/workers/pod.yml
    steps:
      - Git: *git
      - SetProperty: *docker_image_name
      - ShellCommand: *docker_build

  post-merge:
    worker:
      type: kube_pod
      path: eve/workers/pod.yml
    steps:
      - Git: *git
      - ShellCommand: &docker_login
          name: Private Registry Login
          command: >
            docker login
            -u '%(secret:private_registry_username)s'
            -p '%(secret:private_registry_password)s'
            '%(secret:private_registry_url)s'
      - SetProperty: *docker_image_name
      - ShellCommand: *docker_build
      - ShellCommand: &docker_push
          name: Push image
          command: docker push %(prop:docker_image_name)s
