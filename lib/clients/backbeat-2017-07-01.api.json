{
    "version": "1.0",
    "metadata": {
        "apiVersion": "2017-07-01",
        "checksumFormat": "md5",
        "endpointPrefix": "s3",
        "globalEndpoint": "127.0.0.1",
        "protocol": "rest-json",
        "serviceAbbreviation": "Backbeat",
        "serviceFullName": "Backbeat Internal Routes",
        "signatureVersion": "s3",
        "timestampFormat": "rfc822",
        "uid": "backbeat-2017-07-01"
    },
    "operations": {
        "PutData": {
            "http": {
                "method": "PUT",
                "requestUri": "/_/backbeat/data/{Bucket}/{Key+}?v2"
            },
            "input": {
                "type": "structure",
                "required": [
                    "Bucket",
                    "Key"
                ],
                "members": {
                    "Bucket": {
                        "location": "uri",
                        "locationName": "Bucket"
                    },
                    "Key": {
                        "location": "uri",
                        "locationName": "Key"
                    },
                    "ContentLength": {
                        "location": "header",
                        "locationName": "Content-Length",
                        "type": "long"
                    },
                    "ContentMD5": {
                        "location": "header",
                        "locationName": "Content-MD5"
                    },
                    "CanonicalID": {
                        "location": "header",
                        "locationName": "X-Scal-Canonical-Id"
                    },
                    "Body": {
                        "streaming": true,
                        "type": "blob"
                    }
                },
                "payload": "Body"
            },
            "output": {
                "type": "structure",
                "members": {
                    "Location": {
                        "type": "list",
                        "member": {
                            "type": "structure",
                            "members": {
                                "key": {
                                    "type": "string"
                                },
                                "dataStoreName": {
                                    "type": "string"
                                },
                                "cryptoScheme": {
                                    "type": "long"
                                },
                                "cipheredDataKey": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "ServerSideEncryption": {
                        "location": "header",
                        "locationName": "x-amz-server-side-encryption"
                    },
                    "SSECustomerAlgorithm": {
                        "location": "header",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm"
                    },
                    "SSEKMSKeyId": {
                        "location": "header",
                        "locationName": "x-amz-server-side-encryption-aws-kms-key-id"
                    }
                },
                "payload": "Location"
            }
        },
        "MultipleBackendPutObject": {
            "http": {
                "method": "PUT",
                "requestUri": "/_/backbeat/multiplebackenddata/{Bucket}/{Key+}?operation=putobject"
            },
            "input": {
                "type": "structure",
                "required": [
                    "Bucket",
                    "Key",
                    "StorageClass"
                ],
                "members": {
                    "Bucket": {
                        "location": "uri",
                        "locationName": "Bucket"
                    },
                    "Key": {
                        "location": "uri",
                        "locationName": "Key"
                    },
                    "ContentLength": {
                        "location": "header",
                        "locationName": "Content-Length",
                        "type": "long"
                    },
                    "ContentMD5": {
                        "location": "header",
                        "locationName": "Content-MD5"
                    },
                    "ContentType": {
                        "location": "header",
                        "locationName": "X-Scal-Content-Type"
                    },
                    "UserMetaData": {
                        "location": "header",
                        "locationName": "X-Scal-User-Metadata"
                    },
                    "CacheControl": {
                        "location": "header",
                        "locationName": "X-Scal-Cache-Control"
                    },
                    "ContentDisposition": {
                        "location": "header",
                        "locationName": "X-Scal-Content-Disposition"
                    },
                    "ContentEncoding": {
                        "location": "header",
                        "locationName": "X-Scal-Content-Encoding"
                    },
                    "CanonicalID": {
                        "location": "header",
                        "locationName": "X-Scal-Canonical-Id"
                    },
                    "StorageClass": {
                        "location": "header",
                        "locationName": "X-Scal-Storage-Class"
                    },
                    "StorageType": {
                        "location": "header",
                        "locationName": "X-Scal-Storage-Type"
                    },
                    "VersionId": {
                        "location": "header",
                        "locationName": "X-Scal-Version-Id"
                    },
                    "Tags": {
                        "location": "header",
                        "locationName": "X-Scal-Tags"
                    },
                    "Body": {
                        "streaming": true,
                        "type": "blob"
                    }
                },
                "payload": "Body"
            },
            "output": {
                "type": "structure",
                "members": {
                    "versionId": {
                        "type": "string"
                    },
                    "location": {
                        "type": "list",
                        "member": {
                            "shape": "LocationMDObj"
                        }
                    }
                }
            }
        },
        "MultipleBackendDeleteObject": {
            "http": {
                "method": "DELETE",
                "requestUri": "/_/backbeat/multiplebackenddata/{Bucket}/{Key+}?operation=deleteobject"
            },
            "input": {
                "type": "structure",
                "required": [
                    "Bucket",
                    "Key",
                    "StorageClass"
                ],
                "members": {
                    "Bucket": {
                        "location": "uri",
                        "locationName": "Bucket"
                    },
                    "Key": {
                        "location": "uri",
                        "locationName": "Key"
                    },
                    "StorageType": {
                        "location": "header",
                        "locationName": "X-Scal-Storage-Type"
                    },
                    "StorageClass": {
                        "location": "header",
                        "locationName": "X-Scal-Storage-Class"
                    },
                    "Body": {
                        "type": "blob"
                    }
                },
                "payload": "Body"
            },
            "output": {
                "type": "structure",
                "members": {
                    "versionId": {
                        "type": "string"
                    }
                }
            }
        },
        "MultipleBackendHeadObject": {
            "http": {
                "method": "GET",
                "requestUri": "/_/backbeat/multiplebackendmetadata/{Bucket}/{Key+}"
            },
            "input": {
                "type": "structure",
                "required": [
                    "Bucket",
                    "Key",
                    "Locations"
                ],
                "members": {
                    "Bucket": {
                        "location": "uri",
                        "locationName": "Bucket"
                    },
                    "Key": {
                        "location": "uri",
                        "locationName": "Key"
                    },
                    "Locations": {
                        "location": "header",
                        "locationName": "X-Scal-Locations",
                        "type": "string",
                        "member": {
                            "type": "structure",
                            "required": [
                                "key",
                                "dataStoreName"
                            ],
                            "member": {
                                "shape": "LocationMDObj"
                            }
                        }
                    }
                }
            },
            "output": {
                "type": "structure",
                "members": {
                    "lastModified": {
                        "type": "string"
                    }
                }
            }
        },
        "MultipleBackendPutMPUPart": {
            "http": {
                "method": "PUT",
                "requestUri": "/_/backbeat/multiplebackenddata/{Bucket}/{Key+}?operation=putpart"
            },
            "input": {
                "type": "structure",
                "required": [
                    "Bucket",
                    "Key",
                    "StorageClass"
                ],
                "members": {
                    "Bucket": {
                        "location": "uri",
                        "locationName": "Bucket"
                    },
                    "Key": {
                        "location": "uri",
                        "locationName": "Key"
                    },
                    "ContentLength": {
                        "location": "header",
                        "locationName": "Content-Length",
                        "type": "long"
                    },
                    "StorageType": {
                        "location": "header",
                        "locationName": "X-Scal-Storage-Type"
                    },
                    "StorageClass": {
                        "location": "header",
                        "locationName": "X-Scal-Storage-Class"
                    },
                    "PartNumber": {
                        "location": "header",
                        "locationName": "X-Scal-Part-Number",
                        "type": "long"
                    },
                    "UploadId": {
                        "location": "header",
                        "locationName": "X-Scal-Upload-Id"
                    },
                    "Body": {
                        "streaming": true,
                        "type": "blob"
                    }
                },
                "payload": "Body"
            },
            "output": {
                "type": "structure",
                "members": {
                    "partNumber": {
                        "type": "long"
                    },
                    "ETag": {
                        "type": "string"
                    },
                    "numberSubParts": {
                        "type": "long"
                    }
                }
            }
        },
        "MultipleBackendInitiateMPU": {
            "http": {
                "method": "POST",
                "requestUri": "/_/backbeat/multiplebackenddata/{Bucket}/{Key+}?operation=initiatempu"
            },
            "input": {
                "type": "structure",
                "required": [
                    "Bucket",
                    "Key",
                    "StorageClass"
                ],
                "members": {
                    "Bucket": {
                        "location": "uri",
                        "locationName": "Bucket"
                    },
                    "Key": {
                        "location": "uri",
                        "locationName": "Key"
                    },
                    "StorageClass": {
                        "location": "header",
                        "locationName": "X-Scal-Storage-Class"
                    },
                    "VersionId": {
                        "location": "header",
                        "locationName": "X-Scal-Version-Id"
                    },
                    "StorageType": {
                        "location": "header",
                        "locationName": "X-Scal-Storage-Type"
                    },
                    "ContentType": {
                        "location": "header",
                        "locationName": "X-Scal-Content-Type"
                    },
                    "UserMetaData": {
                        "location": "header",
                        "locationName": "X-Scal-User-Metadata"
                    },
                    "CacheControl": {
                        "location": "header",
                        "locationName": "X-Scal-Cache-Control"
                    },
                    "ContentDisposition": {
                        "location": "header",
                        "locationName": "X-Scal-Content-Disposition"
                    },
                    "ContentEncoding": {
                        "location": "header",
                        "locationName": "X-Scal-Content-Encoding"
                    },
                    "Tags": {
                        "location": "header",
                        "locationName": "X-Scal-Tags"
                    },
                    "Body": {
                        "type": "blob"
                    }
                },
                "payload": "Body"
            },
            "output": {
                "type": "structure",
                "members": {
                    "uploadId": {
                        "type": "string"
                    }
                }
            }
        },
        "MultipleBackendAbortMPU": {
            "http": {
                "method": "DELETE",
                "requestUri": "/_/backbeat/multiplebackenddata/{Bucket}/{Key+}?operation=abortmpu"
            },
            "input": {
                "type": "structure",
                "required": [
                    "Bucket",
                    "Key",
                    "StorageClass"
                ],
                "members": {
                    "Bucket": {
                        "location": "uri",
                        "locationName": "Bucket"
                    },
                    "Key": {
                        "location": "uri",
                        "locationName": "Key"
                    },
                    "StorageType": {
                        "location": "header",
                        "locationName": "X-Scal-Storage-Type"
                    },
                    "StorageClass": {
                        "location": "header",
                        "locationName": "X-Scal-Storage-Class"
                    },
                    "UploadId": {
                        "location": "header",
                        "locationName": "X-Scal-Upload-Id"
                    }
                }
            },
            "output": {
                "type": "structure",
                "members": {}
            }
        },
        "MultipleBackendCompleteMPU": {
            "http": {
                "method": "POST",
                "requestUri": "/_/backbeat/multiplebackenddata/{Bucket}/{Key+}?operation=completempu"
            },
            "input": {
                "type": "structure",
                "required": [
                    "Bucket",
                    "Key",
                    "StorageClass"
                ],
                "members": {
                    "Bucket": {
                        "location": "uri",
                        "locationName": "Bucket"
                    },
                    "Key": {
                        "location": "uri",
                        "locationName": "Key"
                    },
                    "StorageType": {
                        "location": "header",
                        "locationName": "X-Scal-Storage-Type"
                    },
                    "StorageClass": {
                        "location": "header",
                        "locationName": "X-Scal-Storage-Class"
                    },
                    "VersionId": {
                        "location": "header",
                        "locationName": "X-Scal-Version-Id"
                    },
                    "ContentType": {
                        "location": "header",
                        "locationName": "X-Scal-Content-Type"
                    },
                    "UserMetaData": {
                        "location": "header",
                        "locationName": "X-Scal-User-Metadata"
                    },
                    "CacheControl": {
                        "location": "header",
                        "locationName": "X-Scal-Cache-Control"
                    },
                    "ContentDisposition": {
                        "location": "header",
                        "locationName": "X-Scal-Content-Disposition"
                    },
                    "ContentEncoding": {
                        "location": "header",
                        "locationName": "X-Scal-Content-Encoding"
                    },
                    "UploadId": {
                        "location": "header",
                        "locationName": "X-Scal-Upload-Id"
                    },
                    "Tags": {
                        "location": "header",
                        "locationName": "X-Scal-Tags"
                    },
                    "Body": {
                        "type": "blob"
                    }
                },
                "payload": "Body"
            },
            "output": {
                "type": "structure",
                "members": {
                    "versionId": {
                        "type": "string"
                    },
                    "location": {
                        "type": "list",
                        "member": {
                            "shape": "LocationMDObj"
                        }
                    }
                }
            }
        },
        "MultipleBackendPutObjectTagging": {
            "http": {
                "method": "POST",
                "requestUri": "/_/backbeat/multiplebackenddata/{Bucket}/{Key+}?operation=puttagging"
            },
            "input": {
                "type": "structure",
                "required": [
                    "Bucket",
                    "Key",
                    "StorageClass"
                ],
                "members": {
                    "Bucket": {
                        "location": "uri",
                        "locationName": "Bucket"
                    },
                    "Key": {
                        "location": "uri",
                        "locationName": "Key"
                    },
                    "StorageType": {
                        "location": "header",
                        "locationName": "X-Scal-Storage-Type"
                    },
                    "StorageClass": {
                        "location": "header",
                        "locationName": "X-Scal-Storage-Class"
                    },
                    "DataStoreVersionId": {
                        "location": "header",
                        "locationName": "X-Scal-Data-Store-Version-Id"
                    },
                    "Tags": {
                        "location": "header",
                        "locationName": "X-Scal-Tags"
                    },
                    "SourceBucket": {
                        "location": "header",
                        "locationName": "X-Scal-Source-Bucket"
                    },
                    "SourceVersionId": {
                        "location": "header",
                        "locationName": "X-Scal-Source-Version-Id"
                    },
                    "ReplicationEndpointSite": {
                        "location": "header",
                        "locationName": "X-Scal-Replication-Endpoint-Site"
                    },
                    "Body": {
                        "type": "blob"
                    }
                },
                "payload": "Body"
            },
            "output": {
                "type": "structure",
                "members": {
                    "versionId": {
                        "type": "string"
                    }
                }
            }
        },
        "MultipleBackendDeleteObjectTagging": {
            "http": {
                "method": "DELETE",
                "requestUri": "/_/backbeat/multiplebackenddata/{Bucket}/{Key+}?operation=deleteobjecttagging"
            },
            "input": {
                "type": "structure",
                "required": [
                    "Bucket",
                    "Key",
                    "StorageClass"
                ],
                "members": {
                    "Bucket": {
                        "location": "uri",
                        "locationName": "Bucket"
                    },
                    "Key": {
                        "location": "uri",
                        "locationName": "Key"
                    },
                    "StorageClass": {
                        "location": "header",
                        "locationName": "X-Scal-Storage-Class"
                    },
                    "StorageType": {
                        "location": "header",
                        "locationName": "X-Scal-Storage-Type"
                    },
                    "DataStoreVersionId": {
                        "location": "header",
                        "locationName": "X-Scal-Data-Store-Version-Id"
                    },
                    "SourceBucket": {
                        "location": "header",
                        "locationName": "X-Scal-Source-Bucket"
                    },
                    "SourceVersionId": {
                        "location": "header",
                        "locationName": "X-Scal-Source-Version-Id"
                    },
                    "ReplicationEndpointSite": {
                        "location": "header",
                        "locationName": "X-Scal-Replication-Endpoint-Site"
                    },
                    "Body": {
                        "type": "blob"
                    }
                },
                "payload": "Body"
            },
            "output": {
                "type": "structure",
                "members": {
                    "versionId": {
                        "type": "string"
                    }
                }
            }
        },
        "PutMetadata": {
            "http": {
                "method": "PUT",
                "requestUri": "/_/backbeat/metadata/{Bucket}/{Key+}"
            },
            "input": {
                "type": "structure",
                "required": [
                    "Bucket",
                    "Key"
                ],
                "members": {
                    "Bucket": {
                        "location": "uri",
                        "locationName": "Bucket"
                    },
                    "Key": {
                        "location": "uri",
                        "locationName": "Key"
                    },
                    "VersionId": {
                        "type": "string",
                        "documentation": "VersionId used to reference a specific version of the object.",
                        "location": "querystring",
                        "locationName": "versionId"
                    },
                    "ContentLength": {
                        "location": "header",
                        "locationName": "Content-Length",
                        "type": "long"
                    },
                    "ContentMD5": {
                        "location": "header",
                        "locationName": "Content-MD5"
                    },
                    "Body": {
                        "type": "blob"
                    },
                    "ReplicationContent": {
                        "location": "header",
                        "locationName": "x-scal-replication-content",
                        "type": "string"
                    }
                },
                "payload": "Body"
            },
            "output": {
                "type": "structure",
                "members": {
                    "versionId": {
                        "type": "string"
                    }
                }
            }
        },
        "GetMetadata": {
            "http": {
                "method": "GET",
                "requestUri": "/_/backbeat/metadata/{Bucket}/{Key+}"
            },
            "input": {
                "type": "structure",
                "required": [
                    "Bucket",
                    "Key"
                ],
                "members": {
                    "Bucket": {
                        "location": "uri",
                        "locationName": "Bucket"
                    },
                    "Key": {
                        "location": "uri",
                        "locationName": "Key"
                    },
                    "VersionId": {
                        "type": "string",
                        "documentation": "VersionId used to reference a specific version of the object.",
                        "location": "querystring",
                        "locationName": "versionId"
                    }
                }
            },
            "output": {
                "type": "structure",
                "members": {
                    "Body": {
                        "type": "string"
                    }
                }
            }
        },
        "GetObject": {
            "http": {
                "method": "GET",
                "requestUri": "/{Bucket}/{Key+}"
            },
            "input": {
                "type": "structure",
                "required": [
                    "Bucket",
                    "Key"
                ],
                "members": {
                    "Bucket": {
                        "location": "uri",
                        "locationName": "Bucket"
                    },
                    "IfMatch": {
                        "location": "header",
                        "locationName": "If-Match"
                    },
                    "IfModifiedSince": {
                        "location": "header",
                        "locationName": "If-Modified-Since",
                        "type": "timestamp"
                    },
                    "IfNoneMatch": {
                        "location": "header",
                        "locationName": "If-None-Match"
                    },
                    "IfUnmodifiedSince": {
                        "location": "header",
                        "locationName": "If-Unmodified-Since",
                        "type": "timestamp"
                    },
                    "Key": {
                        "location": "uri",
                        "locationName": "Key"
                    },
                    "Range": {
                        "location": "header",
                        "locationName": "Range"
                    },
                    "ResponseCacheControl": {
                        "location": "querystring",
                        "locationName": "response-cache-control"
                    },
                    "ResponseContentDisposition": {
                        "location": "querystring",
                        "locationName": "response-content-disposition"
                    },
                    "ResponseContentEncoding": {
                        "location": "querystring",
                        "locationName": "response-content-encoding"
                    },
                    "ResponseContentLanguage": {
                        "location": "querystring",
                        "locationName": "response-content-language"
                    },
                    "ResponseContentType": {
                        "location": "querystring",
                        "locationName": "response-content-type"
                    },
                    "ResponseExpires": {
                        "location": "querystring",
                        "locationName": "response-expires",
                        "type": "timestamp"
                    },
                    "VersionId": {
                        "location": "querystring",
                        "locationName": "versionId"
                    },
                    "SSECustomerAlgorithm": {
                        "location": "header",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm"
                    },
                    "SSECustomerKey": {
                        "shape": "S19",
                        "location": "header",
                        "locationName": "x-amz-server-side-encryption-customer-key"
                    },
                    "SSECustomerKeyMD5": {
                        "location": "header",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5"
                    },
                    "RequestPayer": {
                        "location": "header",
                        "locationName": "x-amz-request-payer"
                    },
                    "PartNumber": {
                        "location": "querystring",
                        "locationName": "partNumber",
                        "type": "integer"
                    },
                    "LocationConstraint": {
                        "location": "header",
                        "locationName": "x-amz-location-constraint"
                    }
                }
            },
            "output": {
                "type": "structure",
                "members": {
                    "Body": {
                        "streaming": true,
                        "type": "blob"
                    },
                    "DeleteMarker": {
                        "location": "header",
                        "locationName": "x-amz-delete-marker",
                        "type": "boolean"
                    },
                    "AcceptRanges": {
                        "location": "header",
                        "locationName": "accept-ranges"
                    },
                    "Expiration": {
                        "location": "header",
                        "locationName": "x-amz-expiration"
                    },
                    "Restore": {
                        "location": "header",
                        "locationName": "x-amz-restore"
                    },
                    "LastModified": {
                        "location": "header",
                        "locationName": "Last-Modified",
                        "type": "timestamp"
                    },
                    "ContentLength": {
                        "location": "header",
                        "locationName": "Content-Length",
                        "type": "long"
                    },
                    "ETag": {
                        "location": "header",
                        "locationName": "ETag"
                    },
                    "MissingMeta": {
                        "location": "header",
                        "locationName": "x-amz-missing-meta",
                        "type": "integer"
                    },
                    "VersionId": {
                        "location": "header",
                        "locationName": "x-amz-version-id"
                    },
                    "CacheControl": {
                        "location": "header",
                        "locationName": "Cache-Control"
                    },
                    "ContentDisposition": {
                        "location": "header",
                        "locationName": "Content-Disposition"
                    },
                    "ContentEncoding": {
                        "location": "header",
                        "locationName": "Content-Encoding"
                    },
                    "ContentLanguage": {
                        "location": "header",
                        "locationName": "Content-Language"
                    },
                    "ContentRange": {
                        "location": "header",
                        "locationName": "Content-Range"
                    },
                    "ContentType": {
                        "location": "header",
                        "locationName": "Content-Type"
                    },
                    "Expires": {
                        "location": "header",
                        "locationName": "Expires",
                        "type": "timestamp"
                    },
                    "WebsiteRedirectLocation": {
                        "location": "header",
                        "locationName": "x-amz-website-redirect-location"
                    },
                    "ServerSideEncryption": {
                        "location": "header",
                        "locationName": "x-amz-server-side-encryption"
                    },
                    "Metadata": {
                        "shape": "S11",
                        "location": "headers",
                        "locationName": "x-amz-meta-"
                    },
                    "SSECustomerAlgorithm": {
                        "location": "header",
                        "locationName": "x-amz-server-side-encryption-customer-algorithm"
                    },
                    "SSECustomerKeyMD5": {
                        "location": "header",
                        "locationName": "x-amz-server-side-encryption-customer-key-MD5"
                    },
                    "SSEKMSKeyId": {
                        "shape": "Sj",
                        "location": "header",
                        "locationName": "x-amz-server-side-encryption-aws-kms-key-id"
                    },
                    "StorageClass": {
                        "location": "header",
                        "locationName": "x-amz-storage-class"
                    },
                    "RequestCharged": {
                        "location": "header",
                        "locationName": "x-amz-request-charged"
                    },
                    "ReplicationStatus": {
                        "location": "header",
                        "locationName": "x-amz-replication-status"
                    },
                    "PartsCount": {
                        "location": "header",
                        "locationName": "x-amz-mp-parts-count",
                        "type": "integer"
                    },
                    "TagCount": {
                        "location": "header",
                        "locationName": "x-amz-tagging-count",
                        "type": "integer"
                    }
                },
                "payload": "Body"
            }
        },
        "BatchDelete": {
            "http": {
                "method": "POST",
                "requestUri": "/_/backbeat/batchdelete/{Bucket}/{Key+}"
            },
            "input": {
                "type": "structure",
                "required": [
                ],
                "members": {
                    "Bucket": {
                        "location": "uri",
                        "locationName": "Bucket"
                    },
                    "Key": {
                        "location": "uri",
                        "locationName": "Key"
                    },
                    "IfUnmodifiedSince": {
                        "location": "header",
                        "locationName": "If-Unmodified-Since",
                        "type": "string"
                    },
                    "StorageClass": {
                        "location": "header",
                        "locationName": "X-Scal-Storage-Class"
                    },
                    "Tags": {
                        "location": "header",
                        "locationName": "X-Scal-Tags"
                    },
                    "ContentType": {
                        "location": "header",
                        "locationName": "X-Scal-Content-Type"
                    },
                    "Locations": {
                        "type": "list",
                        "member": {
                            "type": "structure",
                            "required": [
                                "key",
                                "dataStoreName"
                            ],
                            "members": {
                                "dataStoreName": {
                                    "type": "string"
                                },
                                "key": {
                                    "type": "string"
                                },
                                "size": {
                                    "type": "integer"
                                },
                                "dataStoreVersionId": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "output": {
                "type": "structure",
                "members": {
                }
            }
        },
        "GetRaftBuckets": {
            "http": {
                "method": "GET",
                "requestUri": "/_/metadata/admin/raft_sessions/{LogId}/bucket"
            },
            "input": {
                "type": "structure",
                "required": [
                    "LogId"
                ],
                "members": {
                    "LogId": {
                        "location": "uri",
                        "locationName": "LogId"
                    }
                }
            },
            "output": {
                "type": "list",
                "member": {
                    "type": "string"
                }
            }
        },
        "GetRaftId": {
            "http": {
                "method": "GET",
                "requestUri": "/_/metadata/admin/buckets/{Bucket}/id"
            },
            "input": {
                "type": "structure",
                "required": [
                    "Bucket"
                ],
                "members": {
                    "Bucket": {
                        "location": "uri",
                        "locationName": "Bucket"
                    }
                }
            },
            "output": {
                "type": "string"
            }
        },
        "GetRaftLog": {
            "http": {
                "method": "GET",
                "requestUri": "/_/metadata/admin/raft_sessions/{LogId}/log"
            },
            "input": {
                "type": "structure",
                "required": [
                    "LogId"
                ],
                "members": {
                    "LogId": {
                        "location": "uri",
                        "locationName": "LogId"
                    },
                    "Begin": {
                        "type": "integer",
                        "location": "querystring",
                        "locationName": "begin"
                    },
                    "Limit": {
                        "type": "integer",
                        "location": "querystring",
                        "locationName": "limit"
                    },
                    "TargetLeader": {
                        "type": "boolean",
                        "location": "querystring",
                        "locationName": "targetLeader"
                    }
                }
            },
            "output": {
                "shape": "RaftLogOutput"
            }
        },
        "GetBucketMetadata": {
            "http": {
                "method": "GET",
                "requestUri": "/_/metadata/default/attributes/{Bucket}"
            },
            "input": {
                "type": "structure",
                "required": [
                    "Bucket"
                ],
                "members": {
                    "Bucket": {
                        "location": "uri",
                        "locationName": "Bucket"
                    }
                }
            },
            "output": {
                "shape": "BucketMD"
            }
        },
        "GetObjectList": {
            "http": {
                "method": "GET",
                "requestUri": "/_/metadata/default/bucket/{Bucket}"
            },
            "input": {
                "type": "structure",
                "required": [
                    "Bucket"
                ],
                "members": {
                    "Bucket": {
                        "location": "uri",
                        "locationName": "Bucket"
                    }
                }
            },
            "output": {
                "shape": "ObjectMDListResponse"
            }
        },
        "GetBucketCseq": {
            "http": {
                "method": "GET",
                "requestUri": "/_/metadata/default/informations/{Bucket}"
            },
            "input": {
                "type": "structure",
                "required": [
                    "Bucket"
                ],
                "members": {
                    "Bucket": {
                        "location": "uri",
                        "locationName": "Bucket"
                    }
                }
            },
            "output": {
                "type": "list",
                "member": {
                    "type": "structure",
                    "members": {
                        "cseq": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "ListLifecycleMasters": {
            "http": {
              "method": "GET",
              "requestUri": "/_/backbeat/lifecycle/{Bucket}?list-type=master"
            },
            "input": {
              "shape": "ListLifecycleObjectsRequest"
            },
            "output": {
              "shape": "ListLifecycleObjectsOutput"
            }
        },
        "ListLifecycleVersions": {
            "http": {
              "method": "GET",
              "requestUri": "/_/backbeat/lifecycle/{Bucket}?list-type=version"
            },
            "input": {
              "shape": "ListLifecycleObjectsRequest"
            },
            "output": {
              "shape": "ListLifecycleObjectsOutput"
            }
        },
        "ListLifecycleOrphans": {
            "http": {
              "method": "GET",
              "requestUri": "/_/backbeat/lifecycle/{Bucket}?list-type=orphan"
            },
            "input": {
              "shape": "ListLifecycleObjectsRequest"
            },
            "output": {
              "shape": "ListLifecycleObjectsOutput"
            }
        }
    },
    "shapes": {
        "BucketName": {
            "type": "string"
        },
        "BeforeDate": {
            "type": "string"
        },
        "SateDate": {
            "type": "string"
        },
        "ChecksumAlgorithm": {
            "type": "string",
            "enum": [
              "CRC32",
              "CRC32C",
              "SHA1",
              "SHA256"
            ]
        },
        "ChecksumAlgorithmList": {
            "type": "list",
            "member": {
              "shape": "ChecksumAlgorithm"
            },
            "flattened": true
        },
        "DisplayName": {
            "type": "string"
        },
        "EncodingType": {
            "type": "string",
            "documentation": "<p>Requests Amazon S3 to encode the object keys in the response and specifies the encoding method to use. An object key may contain any Unicode character; however, XML 1.0 parser cannot parse some characters, such as characters with an ASCII value from 0 to 10. For characters that are not supported in XML 1.0, you can add this parameter to request that Amazon S3 encode the keys in the response.</p>",
            "enum": [
              "url"
            ]
        },
        "ETag": {
            "type": "string"
        },
        "KeyMarker": {
            "type": "string"
        },
        "MaxKeys": {
            "type": "integer"
        },
        "ObjectStorageClass": {
            "type": "string"
        },
        "Owner": {
            "type": "structure",
            "members": {
              "DisplayName": {
                "shape": "DisplayName",
                "documentation": "<p>Container for the display name of the owner.</p>"
              },
              "ID": {
                "shape": "ID",
                "documentation": "<p>Container for the ID of the owner.</p>"
              }
            },
            "documentation": "<p>Container for the owner's display name and ID.</p>"
        },
        "Prefix": {
            "type": "string"
        },
        "NextKeyMarker": {
            "type": "string"
        },
        "NextVersionIdMarker": {
            "type": "string"
        },
        "IsTruncated": {
            "type": "boolean"
        },
        "ID": {
            "type": "string"
        },
        "LastModified": {
          "type": "timestamp"
        },
        "ObjectKey": {
            "type": "string",
            "min": 1
        },
        "ObjectVersionId": {
            "type": "string"
        },
        "Size": {
            "type": "integer"
        },
        "Value": {
            "type": "string"
        },
        "VersionIdMarker": {
            "type": "string"
        },
        "ListLifecycleObjectsRequest": {
            "type": "structure",
            "required": [
              "Bucket"
            ],
            "members": {
              "Bucket": {
                "shape": "BucketName",
                "documentation": "<p>The name of the bucket containing the objects.</p> <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html\">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p> <p>When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html\">Using Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>",
                "contextParam": {
                  "name": "Bucket"
                },
                "location": "uri",
                "locationName": "Bucket"
              },
              "BeforeDate": {
                "shape": "BeforeDate",
                "documentation": "<p>Limit the response to keys modified prior to before date.</p>",
                "location": "querystring",
                "locationName": "before-date"
              },
              "EncodingType": {
                "shape": "EncodingType",
                "location": "querystring",
                "locationName": "encoding-type"
              },
              "KeyMarker": {
                "shape": "KeyMarker",
                "documentation": "<p>KeyMarker is where you want Cloudserver to start listing from. CloudServer starts listing after this specified key. Marker can be any key in the bucket.</p>",
                "location": "querystring",
                "locationName": "key-marker"
              },
              "VersionIdMarker": {
                "shape": "VersionIdMarker",
                "documentation": "<p>Specifies the object version you want to start listing from.</p>",
                "location": "querystring",
                "locationName": "version-id-marker"
              },
              "MaxKeys": {
                "shape": "MaxKeys",
                "documentation": "<p>Sets the maximum number of keys returned in the response. By default the action returns up to 1,000 key names. The response might contain fewer keys but will never contain more. </p>",
                "location": "querystring",
                "locationName": "max-keys"
              },
              "Prefix": {
                "shape": "Prefix",
                "documentation": "<p>Limits the response to keys that begin with the specified prefix.</p>",
                "location": "querystring",
                "locationName": "prefix"
              }
            }
        },
        "ListLifecycleObjectsOutput": {
            "type": "structure",
            "members": {
              "BeforeDate": {
                "shape": "BeforeDate",
                "documentation": "<p>Limit the response to keys modified prior to before date.</p>"
              },
              "KeyMarker": {
                "shape": "KeyMarker",
                "documentation": "<p>Indicates where in the bucket listing begins. KeyMarker is included in the response if it was sent with the request.</p>"
              },
              "VersionIdMarker": {
                "shape": "VersionIdMarker",
                "documentation": "<p>Marks the last version of the key returned in a truncated response.</p>"
              },
              "IsTruncated": {
                "shape": "IsTruncated",
                "documentation": "<p>A flag that indicates whether Cloudserver returned all of the results that satisfied the search criteria.</p>"
              },
              "NextKeyMarker": {
                "shape": "NextKeyMarker",
                "documentation": "<p>When response is truncated (the IsTruncated element value in the response is true), you can use the key name in this field as key-marker in the subsequent request to get next set of objects.</p>"
              },
              "NextVersionIdMarker": {
                "shape": "NextVersionIdMarker",
                "documentation": "<p>When the number of responses exceeds the value of <code>MaxKeys</code>, <code>NextVersionIdMarker</code> specifies the first object version not returned that satisfies the search criteria. Use this value for the version-id-marker request parameter in a subsequent request.</p>"
              },
              "Contents": {
                "shape": "ObjectLifecycleList",
                "documentation": "<p>Metadata about each object returned.</p>"
              },
              "Name": {
                "shape": "BucketName",
                "documentation": "<p>The bucket name.</p>"
              },
              "Prefix": {
                "shape": "Prefix",
                "documentation": "<p>Keys that begin with the indicated prefix.</p>"
              },
              "MaxKeys": {
                "shape": "MaxKeys",
                "documentation": "<p>The maximum number of keys returned in the response body.</p>"
              },
              "EncodingType": {
                "shape": "EncodingType",
                "documentation": "<p>Encoding type used by CloudServer to encode object keys in the response.</p>"
              }
            }
        },
        "DataStoreName": {
            "type": "string"
        },
        "Archive": {
            "type": "structure",
            "members": {
              "RestoreCompletedAt": {
                "type": "string",
                "documentation": "<p></p>"
              }
            }
        },
        "TransitionInProgress": {
            "type": "boolean"
        },
        "ObjectLifecycleList": {
            "type": "list",
            "member": {
              "shape": "ObjectLifecycle"
            },
            "flattened": true
        },
        "ListType": {
            "type": "string"
        },
        "ObjectLifecycle": {
            "type": "structure",
            "members": {
              "Key": {
                "shape": "ObjectKey",
                "documentation": "<p>The name that you assign to an object. You use the object key to retrieve the object.</p>"
              },
              "LastModified": {
                "shape": "LastModified",
                "documentation": "<p>Creation date of the object.</p>"
              },
              "ETag": {
                "shape": "ETag",
                "documentation": "<p>The entity tag is a hash of the object. The ETag reflects changes only to the contents of an object, not its metadata. The ETag may or may not be an MD5 digest of the object data. Whether or not it is depends on how the object was created and how it is encrypted as described below:</p> <ul> <li> <p>Objects created by the PUT Object, POST Object, or Copy operation, or through the Amazon Web Services Management Console, and are encrypted by SSE-S3 or plaintext, have ETags that are an MD5 digest of their object data.</p> </li> <li> <p>Objects created by the PUT Object, POST Object, or Copy operation, or through the Amazon Web Services Management Console, and are encrypted by SSE-C or SSE-KMS, have ETags that are not an MD5 digest of their object data.</p> </li> <li> <p>If an object is created by either the Multipart Upload or Part Copy operation, the ETag is not an MD5 digest, regardless of the method of encryption. If an object is larger than 16 MB, the Amazon Web Services Management Console will upload or copy that object as a Multipart Upload, and therefore the ETag will not be an MD5 digest.</p> </li> </ul>"
              },
              "ChecksumAlgorithm": {
                "shape": "ChecksumAlgorithmList",
                "documentation": "<p>The algorithm that was used to create a checksum of the object.</p>"
              },
              "ObjectStorageClass": {
                "type": "string"
              },
              "Owner": {
                "shape": "Owner",
                "documentation": "<p>The owner of the object</p>"
              },
              "Size": {
                "shape": "Size",
                "documentation": "<p>Size in bytes of the object</p>"
              },
              "StorageClass": {
                "shape": "ObjectStorageClass",
                "documentation": "<p>The class of storage used to store the object.</p>"
              },
              "TagSet": {
                "shape": "TagSet",
                "documentation": "<p>Contains the tag set.</p>"
              },
              "staleDate": {
                "shape": "SateDate",
                "documentation": "<p>Contains the stale date</p>"
              },
              "VersionId": {
                "shape": "ObjectVersionId",
                "documentation": "<p>version id</p>"
              },
              "DataStoreName": {
                "shape": "DataStoreName",
                "documentation": "<p>The Data location name</p>"
              },
              "TransitionInProgress": {
                "shape": "TransitionInProgress",
                "documentation": "<p> To avoid transitioning object a second time from a new batch. Only implemented for transitions to cold location</p>"
              },
              "Archive": {
                "shape": "Archive",
                "documentation": ""
              },
              "TransitionAttempt": {
                  "shape": "TransitionAttempt"
              },
              "IsDataStoreVersioned": {
                  "shape": "IsDataStoreVersioned"
              },
              "ListType": {
                "shape": "ListType"
              }
            }
        },
        "TransitionAttempt": {
            "type": "integer"
        },
        "IsDataStoreVersioned": {
            "type": "boolean"
        },
        "Tag": {
            "type": "structure",
            "required": [
              "Key",
              "Value"
            ],
            "members": {
              "Key": {
                "shape": "ObjectKey",
                "documentation": "<p>Name of the object key.</p>"
              },
              "Value": {
                "shape": "Value",
                "documentation": "<p>Value of the tag.</p>"
              }
            },
            "documentation": "<p>A container of a key value name pair.</p>"
        },
        "TagSet": {
            "type": "list",
            "member": {
              "shape": "Tag",
              "locationName": "Tag"
            }
        },
        "Sj": {
            "type": "string",
            "sensitive": true
        },
        "S11": {
            "type": "map",
            "key": {},
            "value": {}
        },
        "S19": {
            "type": "blob",
            "sensitive": true
        },
        "ObjectMDListResponse": {
            "type": "structure",
            "members": {
                "Contents": {
                    "shape": "ObjectMDList"
                },
                "CommonPrefixes": {
                    "type": "list",
                    "members": {
                        "type": "string"
                    }
                },
                "IsTruncated": {
                    "type": "boolean"
                },
                "Delimiter": {
                    "type": "string"
                }
            }
        },
        "ObjectMDList": {
            "type": "list",
            "member": {
                "shape": "ObjectMD"
            }
        },
        "ObjectMD": {
            "type": "structure",
            "members": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "BucketMD": {
            "type": "structure",
            "members": {
                "acl": {
                    "shape": "AclObj"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "ownerDisplayName": {
                    "type": "string"
                },
                "creationDate": {
                    "type": "string"
                },
                "mdBucketModelVersion": {
                    "type": "integer"
                },
                "transient": {
                    "type": "boolean"
                },
                "deleted": {
                    "type": "boolean"
                },
                "serverSideEncryption": {
                    "shape": "ServerSideEncryption"
                },
                "versioningConfiguration": {
                    "shape": "VersioningConfigurationObj"
                },
                "locationConstraint": {
                    "type": "string"
                },
                "readLocationConstraint": {
                    "type": "string"
                },
                "cors": {
                    "shape": "CorsListObj"
                },
                "replicationConfiguration": {
                    "shape": "ReplicationConfigurationObj"
                },
                "lifecycleConfiguration": {
                    "shape": "LifecycleConfigurationObj"
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "ServerSideEncryption": {
            "type": "map",
            "key": {},
            "value": {}
        },
        "CorsListObj": {
            "type": "list",
            "member": {
                "shape": "CorsObj"
            }
        },
        "CorsObj": {
            "type": "map",
            "key": {},
            "value": {}
        },
        "VersioningConfigurationObj": {
            "type": "map",
            "key": {},
            "value": {}
        },
        "ReplicationConfigurationObj": {
            "type": "map",
            "key": {},
            "value": {}
        },
        "RepRuleObj": {
            "type": "structure",
            "members": {
                "Destination": {
                    "type": "structure",
                    "members": {
                        "Bucket": {
                            "type": "string"
                        }
                    }
                },
                "Prefix": {
                    "type": "string"
                },
                "Status": {
                    "type": "string",
                    "enum": [
                        "Enabled",
                        "Disabled"
                    ]
                },
                "ID": {
                    "type": "string"
                }
            }
        },
        "LifecycleConfigurationObj": {
            "type": "structure",
            "members": {
                "Rules": {
                    "type": "list",
                    "member": {
                        "shape": "LCRuleObj"
                    }
                }
            }
        },
        "LCRuleObj": {
            "type": "structure",
            "members": {
                "ID": {
                    "type": "string"
                },
                "Status": {
                    "type": "string",
                    "enum": [
                        "Enabled",
                        "Disabled"
                    ]
                },
                "Prefix": {
                    "type": "string"
                },
                "Expiration": {
                    "type": "structure",
                    "members": {
                        "Days": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "AclObj": {
            "type": "structure",
            "members": {
                "Canned": {
                    "type": "string"
                },
                "FULL_CONTROL": {
                    "type": "list",
                    "member": {
                        "type": "string"
                    }
                },
                "WRITE": {
                    "type": "list",
                    "member": {
                        "type": "string"
                    }
                },
                "WRITE_ACP": {
                    "type": "list",
                    "member": {
                        "type": "string"
                    }
                },
                "READ": {
                    "type": "list",
                    "member": {
                        "type": "string"
                    }
                },
                "READ_ACP": {
                    "type": "list",
                    "member": {
                        "type": "string"
                    }
                }
            }
        },
        "LocationMDObj": {
            "type": "structure",
            "members": {
                "key": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "start": {
                    "type": "integer"
                },
                "dataStoreName": {
                    "type": "string"
                },
                "dataStoreType": {
                    "type": "string"
                },
                "dataStoreETag": {
                    "type": "string"
                },
                "dataStoreVersionId": {
                    "type": "string"
                }
            }
        },
        "RaftLogOutput": {
            "type": "structure",
            "members": {
                "info": {
                    "type": "structure",
                    "members": {
                        "start": {
                            "type": "integer"
                        },
                        "cseq": {
                            "type": "integer"
                        },
                        "prune": {
                            "type": "integer"
                        }
                    }
                },
                "log": {
                    "type": "list",
                    "member": {
                        "type": "structure",
                        "members": {
                            "db": {
                                "type": "string"
                            },
                            "entries": {
                                "type": "list",
                                "member": {
                                    "type": "structure",
                                    "members": {
                                        "key": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "method": {
                                "type": "integer"
                            }
                        }
                    }
                }
            }
        }
    }
}
