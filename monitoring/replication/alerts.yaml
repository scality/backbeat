x-inputs:
- name: namespace
  type: constant
  value: zenko
- name: job_queue_populator
  type: constant
  value: artesca-data-backbeat-replication-populator-headless
- name: job_data_processor
  type: constant
  value: artesca-data-backbeat-replication-data-processor-headless
- name: job_replay_processor
  type: constant
  value: artesca-data-backbeat-replication-replay-processor-headless
- name: job_status_processor
  type: constant
  value: artesca-data-backbeat-replication-status-processor-headless
- name: queue_populator_replicas
  type: config
  value: 1
- name: data_processor_replicas
  type: config
  value: 1
- name: replay_processor_replicas
  type: config
  value: 1
- name: status_processor_replicas
  type: config
  value: 1
- name: replicationErrorsWarningThreshold
  type: config
  value: 0.1
- name: replicationErrorsCriticalThreshold
  type: config
  value: 1
- name: rpoWarningThreshold
  type: config
  value: 600
- name: rpoCriticalThreshold
  type: config
  value: 900
- name: latencyWarningThreshold
  type: config
  value: 3000
- name: latencyCriticalThreshold
  type: config
  value: 6000

groups:
- name: Replication
  rules:

  - alert: ReplicationPopulatorDegraded
    expr: sum(up{namespace="${namespace}", job="${job_queue_populator}"}) < ${queue_populator_replicas}
    for: "30s"
    labels:
      severity: warning
    annotations:
      description: "Less than 100% of replication populator endpoints are up and healthy"
      summary: "Replication populator service is degraded"

  - alert: ReplicationPopulatorCritical
    expr: sum(up{namespace="${namespace}", job="${job_queue_populator}"}) * 2 < ${queue_populator_replicas}
    for: "30s"
    labels:
      severity: critical
    annotations:
      description: "Less than 50% of replication populator endpoints are up and healthy"
      summary: "Replication populator service is critical"

  - alert: ReplicationDataProcessorDegraded
    expr: sum(up{namespace="${namespace}", job="${job_data_processor}"}) < ${data_processor_replicas}
    for: "30s"
    labels:
      severity: warning
    annotations:
      description: "Less than 100% of replication data processor endpoints are up and healthy"
      summary: "Replication data processor service is degraded"

  - alert: ReplicationDataProcessorCritical
    expr: sum(up{namespace="${namespace}", job="${job_data_processor}"}) * 2 < ${data_processor_replicas}
    for: "30s"
    labels:
      severity: critical
    annotations:
      description: "Less than 50% of replication data processor endpoints are up and healthy"
      summary: "Replication data processor service is critical"

  - alert: ReplicationReplayProcessorDegraded
    expr: sum(up{namespace="${namespace}", job="${job_replay_processor}"}) < ${replay_processor_replicas}
    for: "30s"
    labels:
      severity: warning
    annotations:
      description: "Less than 100% of replication replay processor endpoints are up and healthy"
      summary: "Replication replay processor service is degraded"

  - alert: ReplicationReplayProcessorCritical
    expr: sum(up{namespace="${namespace}", job="${job_replay_processor}"}) * 2 < ${replay_processor_replicas}
    for: "30s"
    labels:
      severity: critical
    annotations:
      description: "Less than 50% of replication replay processor endpoints are up and healthy"
      summary: "Replication replay processor service is critical"

  - alert: ReplicationStatusProcessorDegraded
    expr: sum(up{namespace="${namespace}", job="${job_status_processor}"}) < ${status_processor_replicas}
    for:   "30s"
    labels:
      severity: warning
    annotations:
      description: "Less than 100% of replication status processor endpoints are up and healthy"
      summary: "Replication status processor service is degraded"

  - alert: ReplicationStatusProcessorCritical
    expr: sum(up{namespace="${namespace}", job="${job_status_processor}"}) * 2 < ${status_processor_replicas}
    for: "30s"
    labels:
      severity: critical
    annotations:
      description: "Less than 50% of replication status processor endpoints are up and healthy"
      summary: "Replication status processor service is critical"

  - alert: ReplicationErrorsWarningThreshold
    expr: |
      100 / (1 + sum(rate(replication_status_changed_total{namespace="${namespace}",
                              job="${job_status_processor}", replicationStatus='FAILED'}))
                   /
                 sum(rate(replication_status_changed_total{namespace="${namespace}",
                              job="${job_status_processor}", replicationStatus='COMPLETED'}))
            ) > 100 - ${replicationErrorsWarningThreshold}
    for: "30s"
    labels:
      severity: warning
    annotations:
      description: "Replication error rate is higher than ${replicationErrorsWarningThreshold}"
      summary: "Replication error rate warning"

  - alert: ReplicationErrorsCriticalThreshold
    expr: |
      100 / (1 + sum(rate(replication_status_changed_total{namespace="${namespace}",
                             job="${job_status_processor}", replicationStatus='FAILED'}))
                   /
                 sum(rate(replication_status_changed_total{namespace="${namespace}",
                                  job="${job_status_processor}", replicationStatus='COMPLETED'}))
            ) > 100 - ${replicationErrorsCriticalThreshold}
    for: "30s"
    labels:
      severity: critical
    annotations:
      description: "Replication error rate is higher than ${replicationErrorsWarningThreshold}"
      summary: "Replication error rate critical"

  - alert: RpoWarning
    expr: |
      sum(rate(replication_rpo_seconds_sum{namespace="${namespace}", job="${job_data_processor}"}[1m]))
          / sum(rate(replication_rpo_seconds_count{namespace="${namespace}", job="${job_data_processor}"}[1m]))
        >= ${rpoWarningThreshold}
    for: 5m
    labels:
      severity: warning
    annotations:
      description: |
        RPO is higher than ${rpoCriticalThreshold} seconds.

        This may indicate an issue with Kafka or the data-processor.

        RPO is the delay between the time the object is updated and when it is picked up by the
        data-processor.
      summary: "High RPO"

  - alert: RpoCritical
    expr: |
      sum(rate(replication_rpo_seconds_sum{namespace="${namespace}", job="${job_data_processor}"}[1m]))
          / sum(rate(replication_rpo_seconds_count{namespace="${namespace}", job="${job_data_processor}"}[1m]))
        >= ${rpoCriticalThreshold}
    for: 5m
    labels:
      severity: critical
    annotations:
      description: |
        RPO is higher than ${rpoCriticalThreshold} seconds.
        
        This may indicate an issue with Kafka or the data-processor.

        RPO is the delay between the time the object is updated and when it is picked up by the
        data-processor.
      summary: "Very high RPO"

  - alert: ReplicationLatencyWarning
    expr: |
      sum(rate(replication_latency_seconds_sum{namespace="${namespace}", job="${job_status_processor}"}[1m]))
            by(location)
        /
      sum(rate(replication_latency_seconds_count{namespace="${namespace}", job="${job_status_processor}"}[1m]))
            by(location)
      >= ${latencyWarningThreshold}
    for: 5m
    labels:
      severity: warning
    annotations:
      description: |
        Replication latency is higher than ${latencyWarningThreshold} seconds.
        
        This may indicate an issue with the data-processor or the remote replication site.

        Replication latency is the time taken for an object to replicate successfully to the
        destination.
      summary: "High replication latency"

  - alert: ReplicationLatencyCritical
    expr: |
      sum(rate(replication_latency_seconds_sum{namespace="${namespace}", job="${job_status_processor}"}[1m]))
            by(location)
        /
      sum(rate(replication_latency_seconds_count{namespace="${namespace}", job="${job_status_processor}"}[1m]))
            by(location)
      >= ${latencyCriticalThreshold}
    for: 5m
    labels:
      severity: critical
    annotations:
      description: |
        Replication latency is higher than ${latencyWarningThreshold} seconds.
        
        This may indicate an issue with the data-processor or the remote replication site.

        Replication latency is the time taken for an object to replicate successfully to the
        destination.
      summary: "Very high replication latency"

  - alert: ReplicationBacklogGrowing
    expr: |
      sum(increase(replication_replay_objects_completed_total{
                       namespace='${namespace}', job="${job_status_processor}",
                       replicationStatus=~'FAILED|COMPLETED'
                   }[$__rate_interval])) by(location)
        -
      sum(increase(replication_rpo_seconds_count{
                       namespace="${namespace}", job="${job_data_processor}",
                   }[$__rate_interval])) by(location)
      < 0
    for: 3h
    labels:
      severity: critical
    annotations:
      description: Alert if processing is slower than the backlog with a threshold 3 hours
      summary: "Replication backlog grows faster than it is processed"